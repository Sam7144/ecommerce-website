import CheckoutWizard from "@/components/CheckOutWizzard";
import React, { useContext, useEffect, useState } from "react";
import Layout from "../components/layout";
import Link from "next/link";
import { Store } from "../utils/Store";
import Image from "next/image";
import { useRouter } from "next/router";
import { toast } from "react-toastify";
import { getError } from "@/utils/error";
import axios from "axios";
import Cookies from 'js-cookie'
export default function PlaceOrderScreen() {
    const router=useRouter();
  const { state, dispatch } = useContext(Store);
  const { cart } = state;
  const { cartItems, shippingAddress, paymentMethod } = cart;
  const round2=(num)=>Math.round(num*100 + Number.EPSILON)/100;
  const itemsPrice=round2(cartItems.reduce((a, c) => a + c.quantity * c.price, 0));
  const shippingPrice=itemsPrice>200?0:15;
  const taxPrice=round2(itemsPrice*0.15);
  const totalPrice=round2(shippingPrice+taxPrice+itemsPrice);
  useEffect(()=>{
    if(!paymentMethod){
        router.push('/payment');
    }
  },[paymentMethod,router])
  const[loading,setLoading]=useState(false);
  const placeOrderHandler = async () => {
    try {
      setLoading(true);
      const { data } = await axios.post('/api/orders', {
        orderItems: cartItems,
        shippingAddress,
        paymentMethod,
        itemsPrice,
        shippingPrice,
        taxPrice,
        totalPrice,
      });
      setLoading(false);
      dispatch({ type: 'CART_CLEAR_ITEMS' });
      Cookies.set(
        'cart',
        JSON.stringify({
          ...cart,
          cartItems: [],
        })
      );
      router.push(`/order/${data._id}`);
    } catch (err) {
      setLoading(false);
      toast.error(getError(err));
    }
  };
  return (
    <Layout title="place order">
      <CheckoutWizard activeStep={3}></CheckoutWizard>
      <h1 clasName="mb-4 text-xl">place order</h1>
      {cartItems.length === 0 ? (
        <div>
          cart is empty
          <Link href="/">Go Shopping</Link>
        </div>
      ) : (
        <div className="grid md:grid-cols-4 md:gap-5">
          <div className="overflow-x-auto md:col-span-3">
            <div className="card p-5">
              <h2 className="mb-2 text-lg">Shipping Address</h2>
              <div>
                {shippingAddress.fullName},{shippingAddress.address},{" "}
                {shippingAddress.city},{shippingAddress.postalCode},{" "}
                {shippingAddress.country}
              </div>
              <Link href="/shipping">Edit</Link>
            </div>
            <div className="card p-5">
              <h1 className="mb-2 text-lg">Payment Method</h1>
              <div>{paymentMethod}</div>
              <div>
                <Link href="/payment">Edit</Link>
              </div>
            </div>
            <div className="card overflow-x-auto p-5">
              <h2 className="mb-2 text-lg">order items</h2>
              <table className="min-w-full">
                <thead className="border-b">
                  <tr>
                    <th className="px-5 text-left">item</th>
                    <th className="px-5 text-right">quantity</th>
                    <th className="px-5 text-right">price</th>
                    <th className="px-5 ">action</th>
                  </tr>
                </thead>
                <tbody>
                  {cartItems.map((item) => (
                    <tr key={item._id} className="border-b">
                      <td>
                        <Link
                          href={`/product/${item.slug}`}
                          passHref
                          legacyBehavior
                        >
                          <a className="flex items-center">
                            <Image 
                              src={item.image}
                              alt={item.name}
                              width={50}
                              height={50}
                            ></Image>
                            <br />
                            {item.name}
                          </a>
                        </Link>
                      </td>
                      <td className="p-5 text-right">{item.quantity}</td>
                      <td className="p-5 text-right">${item.price}</td>
                      <td className="p-5 text-right">${item.quantity*item.price}</td>
                    </tr>
                  ))}
                </tbody>
              </table>
              <div>
                <Link href='/cart'>Edit</Link>
              </div>
            </div>
          </div>
          <div className="card p-5">
            <h2 className="mb-2 text-lg">order summary</h2>
            <ul>
                <li>
                    <div className="mb-2 flex justify-between">
                        <div>Items</div>
                        <div>${itemsPrice}</div>
                    </div>
                </li>
                <li>
                    <div className="mb-2 flex justify-between">
                        <div>Tax</div>
                        <div>${taxPrice}</div>
                    </div>
                </li>
                <li>
                    <div className="mb-2 flex justify-between">
                        <div>Shipping Price</div>
                        <div>${shippingPrice}</div>
                    </div>
                </li>
                <li>
                    <div className="mb-2 flex justify-between">
                        <div>Total</div>
                        <div>${totalPrice}</div>
                    </div>
                </li>
                <li>
                    <button
                    disabled="loading"
                    type='submit'
                    onClick={placeOrderHandler}
                    className="primary-button w-full"
                    >
                        {loading?'loading...':'place order'}
                    </button>
                </li>
            </ul>
          </div>
        </div>
      )}
    </Layout>
  );
}
PlaceOrderScreen.auth=true;
